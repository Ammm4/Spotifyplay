{"version":3,"sources":["util/spotify.js","components/SearchBar/SearchBar.js","components/Track/Track.js","components/TrackList/TrackList.js","components/SearchResults/SearchResults.js","components/Playlist/Playlist.js","components/Errors/error.js","components/App/App.js","index.js"],"names":["accessToken","SearchBar","props","state","term","button","React","createRef","Search","bind","handleTermChange","handleKeyUp","this","onSearch","event","keyCode","current","click","newTerm","target","value","setState","className","placeholder","onChange","onKeyUp","onClick","ref","style","color","marginTop","inputError","Component","Track","addTrack","removeTrack","renderAction","addSub","onAdd","track","onRemove","name","artist","album","isRemoval","TrackList","tracks","map","key","id","SearchResults","searchResults","Playlist","handleNameChange","e","onNameChange","playlistName","inputValue","playlistTracks","onSave","Error","scrollIntoView","error","spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","process","search","fetch","method","headers","Authorization","then","response","json","jsonResponse","items","artists","uri","App","newPlayListName","updatePlaylistName","savePlaylist","Spotify","find","savedTrack","push","filter","saved","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6adf8de0.chunk.js","sourcesContent":["const redirectUri = 'https://ammm4.github.io/Spotifyplay';\r\nlet accessToken;\r\n\r\nconst spotify = {\r\n  getAccessToken() {\r\n    if(accessToken){\r\n      return accessToken;\r\n    }\r\n    // Get access Token\r\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\n    if (accessTokenMatch && expiresInMatch) {\r\n      accessToken = accessTokenMatch[1];\r\n      const expiresIn = Number(expiresInMatch[1]);\r\n      window.setTimeout(() => accessToken = '', expiresIn * 1000);\r\n      window.history.pushState('Access Token', null, '/');\r\n      return accessToken;\r\n     } else {\r\n      const accessUrl =`https://accounts.spotify.com/authorize?client_id=${process.env.REACT_APP_CLIENT_ID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\r\n      window.location = accessUrl;\r\n     } \r\n  },\r\n\r\n  search(term) {  \r\n    const accessToken = spotify.getAccessToken();\r\n     return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\r\n       method: 'GET', \r\n       headers: {\r\n         Authorization: `Bearer ${accessToken}`\r\n       }\r\n     }).then(response => {\r\n       return response.json();\r\n     }).then(jsonResponse => {\r\n       if(!jsonResponse.tracks) {\r\n         return [];\r\n       }\r\n       return jsonResponse.tracks.items.map(track => \r\n         {return {\r\n           id: track.id,\r\n           name: track.name,\r\n           artist: track.artists[0].name,\r\n           album: track.album.name,\r\n           uri: track.uri\r\n         };})       \r\n     });\r\n\r\n   },\r\n   \r\n    \r\n}\r\nexport default spotify;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      term: ''\r\n    };\r\n   this.button = React.createRef();\r\n   this.Search = this.Search.bind(this);\r\n   this.handleTermChange = this.handleTermChange.bind(this);\r\n   this.handleKeyUp = this.handleKeyUp.bind(this);\r\n    }\r\n  Search(){\r\n   this.props.onSearch(this.state.term);\r\n  }\r\n  handleKeyUp(event){\r\n    if(event.keyCode === 13){\r\n      this.button.current.click();\r\n    }\r\n  }\r\n  handleTermChange(event){\r\n    var newTerm = event.target.value;\r\n    this.setState ({\r\n      term: newTerm\r\n    })\r\n  }\r\n  render(){\r\n    return (\r\n        <div className=\"SearchBar\">\r\n         <input placeholder=\"Enter A Song, Album, or Artist\" onChange={this.handleTermChange} onKeyUp={this.handleKeyUp}/>\r\n         <button className=\"SearchButton\" onClick={this.Search} ref={this.button}>SEARCH</button>\r\n         <div style={{color:'red',marginTop:'5px'}}>{this.props.inputError}</div>\r\n        </div>\r\n    );\r\n    \r\n  }\r\n}\r\nexport default SearchBar;","import React from 'react';\r\nimport './Track.css';\r\n\r\nclass Track extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.addTrack = this.addTrack.bind(this);\r\n    this.removeTrack = this.removeTrack.bind(this);\r\n    this.renderAction = this.renderAction.bind(this);\r\n  }\r\n  renderAction (addSub) {\r\n\r\n    return addSub? <button className='Track-action' onClick={this.removeTrack}>-</button>:<button className='Track-action' onClick={this.addTrack}>+</button>;\r\n      }\r\n      \r\n  addTrack(){\r\n    this.props.onAdd(this.props.track);\r\n  }\r\n  removeTrack() {\r\n    this.props.onRemove(this.props.track);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"Track\">\r\n        <div className=\"Track-information\">\r\n          <h4>{this.props.track.name}</h4>\r\n          <p>{this.props.track.artist} | {this.props.track.album}</p>\r\n        </div>\r\n        {this.renderAction(this.props.isRemoval)}   \r\n        \r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default Track;","import React from 'react';\r\nimport Track from '../Track/Track';\r\nimport './TrackList.css';\r\n\r\nclass TrackList extends React.Component {\r\n \r\n  render(){ \r\n\r\n    return (\r\n     <div className=\"TrackList\">\r\n       {\r\n       this.props.tracks.map(track => {\r\n        return <Track \r\n        track={track}\r\n\r\n        key= {track.id} \r\n\r\n        onAdd={this.props.onAdd} \r\n\r\n        isRemoval={this.props.isRemoval} \r\n\r\n        onRemove={this.props.onRemove} />;\r\n         \r\n        })\r\n       }\r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TrackList;","import React from 'react';\r\nimport './SearchResults.css';\r\nimport TrackList from '../TrackList/TrackList';\r\n\r\nclass SearchResults extends React.Component {\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"SearchResults\">\r\n       <h2>Results</h2>\r\n       <TrackList \r\n         tracks={this.props.searchResults}      \r\n         onAdd={this.props.onAdd}    \r\n         isRemoval={false}      \r\n       />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SearchResults;","import React from 'react';\r\nimport './Playlist.css';\r\nimport  TrackList  from '../TrackList/TrackList';\r\n\r\nclass Playlist extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n  }\r\n  handleNameChange(e) {\r\n   let name = e.target.value;\r\n    this.props.onNameChange(name);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Playlist\">\r\n      <input placeholder={this.props.playlistName} value={this.props.inputValue} onChange={this.handleNameChange}/>\r\n      <TrackList tracks={this.props.playlistTracks} onRemove={this.props.onRemove} isRemoval={true}/>\r\n      <button className=\"Playlist-save\" onClick={this.props.onSave}>SAVE</button>\r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default Playlist;","import React from 'react';\r\n\r\n\r\nclass Error extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.ref = React.createRef();\r\n  }\r\n  componentDidMount(){\r\n    this.ref.current.scrollIntoView();\r\n  }\r\n  render(){\r\n    return(\r\n      <div className='error-container' ref={this.ref}>\r\n        {this.props.error === 'success' ? <span style={{color: 'white'}}>Playlist Saved!</span> : <span>{this.props.error}</span>} \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Error;","import React from 'react';\nimport './App.css';\nimport SearchBar  from '../SearchBar/SearchBar';\nimport SearchResults  from '../SearchResults/SearchResults';\nimport Playlist  from '../Playlist/Playlist';\nimport Error from '../Errors/error'\nimport Spotify from '../../util/spotify';\n\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      SearchResults: [],\n      playlistName: 'New Playlist',\n      newPlayListName: '',\n      playlistTracks: [],\n      inputError:'',\n      error:''\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.Search = this.Search.bind(this);\n  }\n  Search(term){\n    if(!term){\n      this.setState({inputError: 'Enter a Artist, Song or Album'})\n    } else {\n      this.setState({inputError: ''})\n      Spotify.search(term)\n      .then( (tracks) => {\n          this.setState({\n          SearchResults: tracks\n        });\n     });\n    }\n    \n  }\n  addTrack(track){\n    if (this.state.playlistTracks.find(savedTrack => savedTrack.id === track.id )){\n      return;\n      } else { \n      this.state.playlistTracks.push(track);       \n      this.setState({playlistTracks: this.state.playlistTracks});       \n      }\n    }\n  removeTrack(track) {\n   this.setState({\n     playlistTracks: this.state.playlistTracks.filter(saved => {\n    return track.id !== saved.id; }) \n    });\n  }\n  updatePlaylistName(name) {\n  this.setState({\n    newPlayListName: name\n  })\n  }\n  savePlaylist(){\n    if(this.state.playlistTracks.length !== 0 && this.state.newPlayListName !== '') {\n      this.setState({\n        newPlayListName: '',\n        playlistTracks: []\n      })\n      this.setState({error: 'success'});\n    } else {\n      this.setState({error: 'Missing Tracks or Playlist Name'})\n    }\n    window.setTimeout(() => this.setState({error: ''}), 5000)\n  }\n componentDidMount(){\n  Spotify.getAccessToken()\n }\n  render() {\n    return (\n      <div>\n    <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n    <div className=\"App\">\n      <SearchBar onSearch={this.Search} inputError={this.state.inputError}/>\n      {this.state.error && <Error error={this.state.error} />}\n      <div className=\"App-playlist\">\n      <SearchResults \n          searchResults={this.state.SearchResults} \n          onAdd={this.addTrack}/>\n      <Playlist \n          playlistName={this.state.playlistName}\n          inputValue={this.state.newPlayListName}\n          playlistTracks={this.state.playlistTracks} \n          onRemove={this.removeTrack} \n          onNameChange={this.updatePlaylistName} \n          onSave={this.savePlaylist}/>\n      </div>\n    </div>\n  </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}